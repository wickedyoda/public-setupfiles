services:
  broker:
    image: docker.io/library/redis:7
    hostname: redis
    restart: unless-stopped
    volumes:
      - redisdata:/data
    networks:
      - paperless-ngx_default

  db:
    image: docker.io/library/postgres:16
    hostname: postgres
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    networks:
      - paperless-ngx_default

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    hostname: paperless
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - "8010:8000"
    volumes:
      - /mnt/naspublic/paperless-ngx/data:/usr/src/paperless/data
      - /mnt/naspublic/:/usr/src/paperless/media
      - /mnt/naspublic/paperless-ngx/export:/usr/src/paperless/export
      - /mnt/naspublic/paperless-ngx/consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    networks:
      - paperless-ngx_default

  gotenberg:
    image: gotenberg/gotenberg:8
    hostname: gotenberg
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - paperless-ngx_default

  tika:
    image: ghcr.io/paperless-ngx/tika:latest-full
    container_name: paperless_tika
    hostname: tika
    restart: always
    ports:
      - "9998:9998"
    networks:
      - paperless-ngx_default

networks:
  paperless-ngx_default:
    driver: bridge

volumes:
  pgdata:
  redisdata: